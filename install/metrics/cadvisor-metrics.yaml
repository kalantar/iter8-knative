apiVersion: iter8.tools/v2alpha1
kind: Metric
metadata:
  name: container-throttled-seconds-total
spec:
  params:
    query: container_cpu_cfs_throttled_seconds_total{container='kfserving-container', id=~'/kubepods.*', pod=~'.*$name.*'} or on() vector(0)
  description: Total time duration the container has been throttled
  units: seconds
  type: counter
  provider: prometheus
---
apiVersion: iter8.tools/v2alpha1
kind: Metric
metadata:
  name: container-cpu-load-average-10s
spec:
  params:
    query: container_cpu_load_average_10s{container='kfserving-container', id=~'/kubepods.*',pod=~'.*$name.*'}
  description: Value of container cpu load average over the last 10 seconds
  type: gauge
  provider: prometheus
---
apiVersion: iter8.tools/v2alpha1
kind: Metric
metadata:
  name: container-fs-io-time-seconds-total
spec:
  params:
    query: container_fs_io_time_seconds_total{container='kfserving-container', id=~'/kubepods.*',pod=~'.*$name.*'} or on() vector(0)
  description: Cumulative count of seconds spent doing I/Os
  units: seconds
  type: counter
  provider: prometheus
---
apiVersion: iter8.tools/v2alpha1
kind: Metric
metadata:
  name: container-memory-usage-bytes
spec:
  params:
    query: container_memory_usage_bytes{container='kfserving-container', id=~'/kubepods.*', pod=~'.*$name.*'}
  description: Current memory usage, including all memory regardless of when it was
    accessed
  units: bytes
  type: gauge
  provider: prometheus
---
apiVersion: iter8.tools/v2alpha1
kind: Metric
metadata:
  name: container-memory-failcnt
spec:
  params:
    query: container_memory_failcnt{container='kfserving-container', id=~'/kubepods.*', pod=~'.*$name.*'} or on() vector(0)
  description: Number of times memory usage hit resource limit
  type: counter
  provider: prometheus
---
apiVersion: iter8.tools/v2alpha1
kind: Metric
metadata:
  name: container-network-receive-errors-total
spec:
  params:
    query: container_network_receive_errors_total{container='kfserving-container', id=~'/kubepods.*', pod=~'.*$name.*'} or on() vector(0)
  description: Cumulative count of errors encountered while receiving
  type: counter
  provider: prometheus
---
apiVersion: iter8.tools/v2alpha1
kind: Metric
metadata:
  name: container-network-transmit-errors-total
spec:
  params:
    query: container_network_transmit_errors_total{container='kfserving-container', id=~'/kubepods.*', pod=~'.*$name.*'} or on() vector(0)
  description: Cumulative count of errors encountered while transmitting
  type: counter
  provider: prometheus
---
apiVersion: iter8.tools/v2alpha1
kind: Metric
metadata:
  name: container-processes
spec:
  params:
    query: container_processes{container='kfserving-container', id=~'/kubepods.*', pod=~'.*$name.*'}
  description: Number of processes running inside the container
  type: gauge
  provider: prometheus
---
apiVersion: iter8.tools/v2alpha1
kind: Metric
metadata:
  name: container-tasks-state
spec:
  params:
    query: container_tasks_state{container='kfserving-container', id=~'/kubepods.*', pod=~'.*$name.*', state='running'}
  description: Number of tasks in given state (sleeping, running, stopped, uninterruptible,
    or ioawaiting)
  type: gauge
  provider: prometheus
