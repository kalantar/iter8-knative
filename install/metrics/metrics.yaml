apiVersion: iter8.tools/v2alpha1
kind: Metric
metadata:
  name: request-count
spec:
  params:
    query: sum(increase(istio_requests_total{destination_service_name='$name'}[$interval])) or on() vector(0)
  description: Number of requests
  type: counter
  provider: prometheus
---
apiVersion: iter8.tools/v2alpha1
kind: Metric
metadata:
  name: mean-latency
spec:
  description: Mean latency
  units: milliseconds
  params:
    query: sum(increase(istio_request_duration_milliseconds_sum{destination_service_name='$name'}[$interval])) or on() vector(0) / sum(increase(istio_requests_total{destination_service_name='$name'}[$interval])) or on() vector(0)
  type: gauge
  sample_size: 
    name: request-count
  provider: prometheus
---
apiVersion: iter8.tools/v2alpha1
kind: Metric
metadata:
  name: error-count
spec:
  description: Number of error responses
  params:
    query: sum(increase(istio_requests_total{response_code=~'5..', destination_service_name='$name'}[$interval])) or on() vector(0)
  type: counter
  provider: prometheus
---
apiVersion: iter8.tools/v2alpha1
kind: Metric
metadata:
  name: error-rate
spec:
  description: Fraction of requests with error responses
  params:
    query: sum(increase(istio_requests_total{response_code=~'5..', destination_service_name='$name'}[$interval])) or on() vector(0) / sum(increase(istio_requests_total{destination_service_name='$name'}[$interval])) or on() vector(0)
  type: gauge
  sample_size: 
    name: request-count
  provider: prometheus
    
